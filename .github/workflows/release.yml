name: Release to Maven Central
run-name: Build ${{ github.ref_name }} by @${{ github.actor }}

on:
  release:
    types: [ published ]
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  release:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5

      - name: Set Release version env variable
        run: |
          echo "TAG_NAME=${{ github.event.release.tag_name }}" >> $GITHUB_ENV

      # if no tag exists, this is expected to fail
      - name: Switch to git tag for release
        run: |
          git fetch --all --tags -f
          git checkout tags/${{ env.TAG_NAME }} -b ${{ env.TAG_NAME }}-tmp-branch

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          distribution: 'zulu'
          java-version: 17
          cache: 'maven'
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
          gpg-private-key: ${{ secrets.GPG_SIGNING_KEY }}

      - name: Collect JAR artifacts
        run: |
          mkdir -p artifacts
          find . -type f -path "./**/target/*.jar" \
            -not -name "*-sources.jar" \
            -not -name "*-javadoc.jar" \
            -not -name "*tests.jar" \
            -exec cp {} artifacts/ \;
          echo "Collected files:" && ls -la artifacts

      - name: Upload JARs to GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "${{ env.TAG_NAME }}" artifacts/*.jar --clobber

      - name: Deploy
        env:
          MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_SIGNING_PASSWORD }}
        run: |
          ./mvnw --batch-mode -Drevision=${{ env.TAG_NAME }} -P release clean deploy
