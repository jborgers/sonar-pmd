<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ SonarQube PMD Plugin
  ~ Copyright (C) 2012-2018 SonarSource SA
  ~ mailto:jborgers AT jpinpoint DOT com
  ~ mailto:peter.paul.bakker AT stokpop DOT nl
  ~
  ~ This program is free software; you can redistribute it and/or
  ~ modify it under the terms of the GNU Lesser General Public
  ~ License as published by the Free Software Foundation; either
  ~ version 3 of the License, or (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  ~ Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public License
  ~ along with this program; if not, write to the Free Software Foundation,
  ~ Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.sonarsource.pmd</groupId>
  <artifactId>sonar-pmd</artifactId>
  <version>${revision}</version>
  <name>SonarQube PMD Project</name>
  <packaging>pom</packaging>
  <description>Sonar-PMD is a plugin that provides coding rules from PMD for use in SonarQube.</description>

  <scm>
    <connection>scm:git:git@github.com:jborgers/sonar-pmd.git</connection>
    <developerConnection>scm:git:git@github.com:jborgers/sonar-pmd.git</developerConnection>
    <url>https://github.com/jborgers/sonar-pmd</url>
    <tag>${revision}</tag>
  </scm>
  <url>https://github.com/jborgers/sonar-pmd</url>
  <issueManagement>
    <system>Github</system>
    <url>https://github.com/jborgers/sonar-pmd/issues</url>
  </issueManagement>

  <licenses>
    <license>
      <name>GNU LGPL 3</name>
      <url>https://www.gnu.org/licenses/lgpl.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Jeroen Borgers</name>
      <email>jborgers@jpinpoint.com</email>
      <timezone>+1</timezone>
    </developer>
    <developer>
      <name>Peter Paul Bakker</name>
      <email>peter.paul.bakker@stokpop.nl</email>
      <timezone>+1</timezone>
    </developer>
  </developers>

  <properties>
    <!-- use -Drevision=x.y.z to override in build -->
    <!-- use .mvn/maven.config to update to the current next release SNAPSHOT version -->
    <!--    <revision>next-SNAPSHOT</revision>-->
    <license.owner>SonarSource SA and others</license.owner>
    <license.mailto>mailto:jborgers AT jpinpoint DOT com; peter.paul.bakker AT stokpop DOT nl</license.mailto>
    <pmd.version>7.15.0</pmd.version>
    <junit.jupiter.version>5.13.4</junit.jupiter.version>
    <mockito.version>5.18.0</mockito.version>
    <assertj.version>3.27.3</assertj.version>
    <commons-lang3.version>3.18.0</commons-lang3.version>
    <staxmate.version>2.0.1</staxmate.version>
    <java.frontend.version>8.17.1.39878</java.frontend.version>
    <guava.version>33.4.8-jre</guava.version>
    <sslr.squid.bridge.version>2.7.1.392</sslr.squid.bridge.version>
    <jdom2.version>2.0.6.1</jdom2.version>
    <!-- Sonar settings -->
    <version.sonar-packaging.plugin>1.23.0.740</version.sonar-packaging.plugin>
    <sonar-plugin-api-impl.version>25.7.0.110598</sonar-plugin-api-impl.version>
    <sonar-plugin-api.version>13.0.0.3026</sonar-plugin-api.version>
    <sonar-orchestrator.version>5.6.2.2625</sonar-orchestrator.version>
    <sonar-ws-client.version>5.1</sonar-ws-client.version>
    <!-- Technical settings -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.release>11</maven.compiler.release>
    <!-- Maven plugin versions -->
    <maven.enforcer.plugin.version>3.6.1</maven.enforcer.plugin.version>
    <maven.surefire.plugin.version>3.5.3</maven.surefire.plugin.version>
    <maven.failsafe.plugin.version>3.5.3</maven.failsafe.plugin.version>
    <maven.release.plugin.version>3.1.1</maven.release.plugin.version>
    <maven.source.plugin.version>3.3.1</maven.source.plugin.version>
    <maven.javadoc.plugin.version>3.11.2</maven.javadoc.plugin.version>
    <maven.gpg.plugin.version>3.2.8</maven.gpg.plugin.version>
    <maven.cleanup.plugin.version>3.5.0</maven.cleanup.plugin.version>
    <sonar.maven.plugin.version>5.1.0.4751</sonar.maven.plugin.version>
    <jacoco.maven.plugin.version>0.8.13</jacoco.maven.plugin.version>
    <flatten.maven.plugin.version>1.7.1</flatten.maven.plugin.version>
    <!-- Code Coverage -->
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <sonar.coverage.jacoco.xmlReportPaths>sonar-pmd-plugin/target/site/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
    <maven-deploy-plugin.version>3.1.4</maven-deploy-plugin.version>
    <maven-install-plugin.version>3.1.4</maven-install-plugin.version>
    <maven-compiler-plugin.version>3.14.0</maven-compiler-plugin.version>
    <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
    <slf4j-api.version>2.0.17</slf4j-api.version>
    <commons-io.version>2.20.0</commons-io.version>
  </properties>

  <modules>
    <module>sonar-pmd-lib</module>
    <module>sonar-pmd-plugin</module>
    <module>integration-test</module>
  </modules>

  <dependencyManagement>
    <dependencies>
      <!-- SonarQube API -->
      <dependency>
        <groupId>org.sonarsource.api.plugin</groupId>
        <artifactId>sonar-plugin-api</artifactId>
        <version>${sonar-plugin-api.version}</version>
      </dependency>
      <dependency>
        <groupId>org.sonarsource.sonarqube</groupId>
        <artifactId>sonar-plugin-api-impl</artifactId>
        <version>${sonar-plugin-api-impl.version}</version>
      </dependency>
      <dependency>
        <groupId>org.sonarsource.orchestrator</groupId>
        <artifactId>sonar-orchestrator</artifactId>
        <version>${sonar-orchestrator.version}</version>
      </dependency>
      <dependency>
        <groupId>org.sonarsource.orchestrator</groupId>
        <artifactId>sonar-orchestrator-junit4</artifactId>
        <version>${sonar-orchestrator.version}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <!-- pulls in version 1.7.2, incompatible with pmd-7 -->
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.codehaus.sonar</groupId>
        <artifactId>sonar-ws-client</artifactId>
        <version>${sonar-ws-client.version}</version>
        <scope>provided</scope>
      </dependency>

      <!-- PMD -->
      <dependency>
        <groupId>net.sourceforge.pmd</groupId>
        <artifactId>pmd-java</artifactId>
        <version>${pmd.version}</version>
        <exclusions>
          <exclusion>
            <groupId>com.beust</groupId>
            <artifactId>jcommander</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.antlr</groupId>
            <artifactId>antlr4-runtime</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons-lang3.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- Test dependencies -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven-install-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven-deploy-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>${maven.gpg.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.sonarsource.sonar-packaging-maven-plugin</groupId>
          <artifactId>sonar-packaging-maven-plugin</artifactId>
          <version>${version.sonar-packaging.plugin}</version>
          <configuration>
            <pluginApiMinVersion>9.9</pluginApiMinVersion>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven.cleanup.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven.enforcer.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven.surefire.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>flatten-maven-plugin</artifactId>
          <version>${flatten.maven.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>${sonar.maven.plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <release>11</release>  <!-- This automatically sets the module path correctly -->
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
        <version>${sonar.maven.plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-maven-and-java</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>3.8</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>[17,18)</version>
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.sonarsource.sonar-packaging-maven-plugin</groupId>
        <artifactId>sonar-packaging-maven-plugin</artifactId>
        <extensions>true</extensions>
        <configuration>
          <archive>
            <manifestEntries>
              <!-- ${buildNumber} is the svn revision generated by the buildnumber-maven-plugin -->
              <!--suppress UnresolvedMavenProperty -->
              <Implementation-Build>${buildNumber}</Implementation-Build>
              <!--suppress UnresolvedMavenProperty -->
              <Build-Time>${timestamp}</Build-Time>
              <Plugin-RequiredForLanguages>java</Plugin-RequiredForLanguages>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <!-- Plugins for testing -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <runOrder>random</runOrder>
          <parallel>none</parallel>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven.failsafe.plugin.version}</version>
        <configuration>
          <argLine>-server</argLine>
        </configuration>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Release relevant plugins -->
      <plugin>
        <groupId>org.sonatype.central</groupId>
        <artifactId>central-publishing-maven-plugin</artifactId>
        <version>0.8.0</version>
        <extensions>true</extensions>
        <configuration>
          <autoPublish>false</autoPublish>
          <excludeArtifacts>
            <excludeArtifact>integration-test</excludeArtifact>
          </excludeArtifacts>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>${maven.release.plugin.version}</version>
        <configuration>
          <tagNameFormat>@{project.version}</tagNameFormat>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven.source.plugin.version}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven.javadoc.plugin.version}</version>
        <configuration>
          <quiet>true</quiet>
          <source>8</source>
          <detectJavaApiLink>false</detectJavaApiLink>
          <doclint>all,-missing</doclint>
        </configuration>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <version>${maven-install-plugin.version}</version>
        <configuration>
          <pomFile>${project.build.directory}/flattened-pom.xml</pomFile>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>${maven-deploy-plugin.version}</version>
        <configuration>
          <pomFile>${project.build.directory}/flattened-pom.xml</pomFile>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <configuration>
          <flattenMode>oss</flattenMode>
          <updatePomFile>true</updatePomFile>
          <flattenedPomFilename>target/flattened-pom.xml</flattenedPomFilename>
          <pomElements>
            <dependencies>resolve</dependencies>
            <dependencyManagement>resolve</dependencyManagement>
            <pluginManagement>resolve</pluginManagement>
            <properties>interpolate</properties>
          </pomElements>
        </configuration>
        <executions>
          <!-- enable flattening -->
          <execution>
            <id>flatten</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>flatten</goal>
            </goals>
          </execution>
          <!-- ensure proper cleanup -->
          <execution>
            <id>flatten.clean</id>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
          <execution>
            <id>flatten.deploy</id>
            <phase>deploy</phase>
            <goals>
              <goal>flatten</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <gpgArguments>
                <arg>--pinentry-mode</arg>
                <arg>loopback</arg>
              </gpgArguments>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
